# ========= 00_COMMON ========= #

- id: metasploit-pentest-plugin
  name: pentest-plugin
  version:
  kind: metasploit
  phases: [ "00_Common" ]
  caps: [ "automation", "workspace", "import-export", "loot-triage" ]
  repo: https://github.com/darkoperator/Metasploit-Plugins
  desc: Plugin per estendere Metasploit con comandi di automazione (workspace, import/export, note).
  desc_long: Aggiunge scorciatoie operative a Metasploit per velocizzare flussi ripetibili (gestione progetti, import di risultati esterni, annotazioni). Utile come orchestratore leggero nelle fasi di ricognizione, exploitation e post-exploitation.
  best_in: []
  best_in_paths: [ ]
  category_path: [ "00_Common", "Metasploit_Plugins" ]
  notes:

- id: scipag-vulscan
  name: Vulscan
  version:
  kind: nmap
  phases: [ "00_Common" ]
  caps: [ "service-detection", "vuln-mapping", "cve-correlation" ]
  repo: https://github.com/scipag/vulscan
  desc: Trasforma -sV di Nmap in un mapping rapido version→CVE.
  desc_long: Dopo service/version detection, correla i banner a database di vulnerabilità per prioritizzare rapidamente i servizi più a rischio (ottimo appena finita la scansione iniziale).
  best_in: [ ]
  best_in_paths: [ ]
  category_path: [ "00_Common", "Scripts" ]
  notes:

- id: adrecon
  name: ADRecon
  version:
  kind: windows
  phases: [ "00_Common" ]
  caps: [ "ad-inventory", "reporting", "risk-overview" ]
  repo: https://github.com/sense-of-security/ADRecon
  desc: Inventario e reporting completo dell’Active Directory.
  desc_long: Raccoglie oggetti e configurazioni AD (utenti privilegiati, trust, GPO, deleghe) generando report utili per threat modeling e pianificazione attacchi/difese.
  best_in: [ ]
  best_in_paths: [ ]
  category_path: [ "00_Common", "Tools_Windows" ]
  notes:

- id: crackmapexec-win
  name: CrackMapExecWin
  version:
  kind: windows
  phases: [ "00_Common" ]
  caps: [ "auth-spray", "lateral-movement", "remote-exec", "loot" ]
  repo: https://github.com/maaaaz/CrackMapExecWin
  desc: “Coltellino svizzero” per AD (build Windows).
  desc_long: Esegue autenticazioni in massa, enum condivisioni/local-admins, comandi remoti (SMB/WMI/WinRM) e raccolta credenziali. Ideale per il triage rapido in rete Windows.
  best_in: [ ]
  best_in_paths: [ ]
  category_path: [ "00_Common", "Tools_Windows" ]
  notes:

- id: domainpasswordspray
  name: DomainPasswordSpray.ps1
  version:
  kind: windows
  phases: [ "00_Common" ]
  caps: [ "password-spraying", "user-enum", "opsec" ]
  repo: https://github.com/dafthack/DomainPasswordSpray
  desc: Password spraying controllato su domini AD.
  desc_long: Genera userlist dal dominio e prova password comuni rispettando le policy di lockout. Utile per ottenere la prima foothold con basso rumore.
  best_in: [ ]
  best_in_paths: [ ]
  category_path: [ "00_Common", "Tools_Windows" ]
  notes:

- id: getuserspns-windows
  name: GetUserSPNs_windows.exe
  version:
  kind: windows
  phases: [ "00_Common" ]
  caps: [ "kerberoasting", "spn-enum" ]
  repo: https://github.com/maaaaz/impacket-examples-windows
  desc: Enumerazione SPN utente e richiesta TGS per kerberoasting.
  desc_long: Ottiene ticket per account con SPN impostato; i blob possono essere crackati offline per ricavare password di servizio.
  best_in: [ ]
  best_in_paths: [ ]
  category_path: [ "00_Common", "Tools_Windows" ]
  notes:

- id: group3r
  name: Group3r
  version:
  kind: windows
  phases: [ "00_Common" ]
  caps: [ "gpo-audit", "misconfig-detection" ]
  repo: https://github.com/Group3r/Group3r
  desc: Audit di GPO per trovare misconfigurazioni sfruttabili.
  desc_long: Scansiona LDAP/SYSVOL alla ricerca di script, percorsi e ACL rischiosi ereditati dalle GPO, evidenziando writeable path e credenziali esposte.
  best_in: [ ]
  best_in_paths: [ ]
  category_path: [ "00_Common", "Tools_Windows" ]
  notes:

- id: inveigh-exe
  name: Inveigh.exe
  version:
  kind: windows
  phases: [ "00_Common" ]
  caps: [ "mitm", "llmnr-nbns-mdns", "hash-capture", "relay-support" ]
  repo: https://github.com/Kevin-Robertson/Inveigh
  desc: MITM su reti Windows e cattura hash NTLM (binario .NET).
  desc_long: Risponde a LLMNR/NBNS/mDNS per deviare traffico e catturare challenge/response, utile per relay e cracking offline.
  best_in: [ ]
  best_in_paths: [ ]
  category_path: [ "00_Common", "Tools_Windows" ]
  notes:

- id: inveigh-ps1
  name: Inveigh.ps1
  version:
  kind: windows
  phases: [ "00_Common" ]
  caps: [ "mitm", "llmnr-nbns-mdns", "hash-capture" ]
  repo: https://github.com/Kevin-Robertson/Inveigh
  desc: Variante PowerShell di Inveigh per esecuzioni fileless.
  desc_long: Caricabile in memoria, consente cattura hash e relay con footprint ridotto quando l’esecuzione di binari è limitata.
  best_in: [ ]
  best_in_paths: [ ]
  category_path: [ "00_Common", "Tools_Windows" ]
  notes:

- id: kerbrute-win
  name: kerbrute_Windows.exe
  version:
  kind: windows
  phases: [ "00_Common" ]
  caps: [ "user-enum", "password-spraying", "kerberos-preauth" ]
  repo: https://github.com/ropnop/kerbrute
  desc: Enum utenti/spray via Kerberos pre-auth a basso rumore.
  desc_long: Valida utenti/domìni e tenta spray attraverso AS-REQ/AS-REP, rispettando le policy di lockout. Ottimo per initial access senza traffico SMB/LDAP evidente.
  best_in: [ ]
  best_in_paths: [ ]
  category_path: [ "00_Common", "Tools_Windows" ]
  notes:

- id: mimikatz
  name: Mimikatz
  version:
  kind: windows
  phases: [ "00_Common" ]
  caps: [ "credential-dumping", "tickets", "pth", "ptt" ]
  repo: https://github.com/gentilkiwi/mimikatz
  desc: Estrazione credenziali e operazioni Kerberos avanzate.
  desc_long: Dump di credenziali (LSA/WDigest/DPAPI), Pass-the-Hash/Pass-the-Ticket, golden/silver tickets e manipolazioni Kerberos per consolidare la persistenza.
  best_in: [ ]
  best_in_paths: [ ]
  category_path: [ "00_Common", "Tools_Windows" ]
  notes:

- id: pingcastle
  name: PingCastle
  version:
  kind: windows
  phases: [ "00_Common" ]
  caps: [ "ad-health", "risk-scoring", "reporting" ]
  repo: https://www.pingcastle.com/download/
  desc: Valutazione salute e rischi dell’Active Directory con report.
  desc_long: Esegue test metodologici sull’AD (indicatori di esposizione, maturity, deleghe rischiose) e produce report per remediation prioritaria.
  best_in: [ ]
  best_in_paths: [ ]
  category_path: [ "00_Common", "Tools_Windows" ]
  notes:

- id: powerupsql
  name: PowerUpSQL
  version:
  kind: windows
  phases: [ "00_Common" ]
  caps: [ "mssql-discovery", "audit-weak-config", "priv-esc", "os-cmd" ]
  repo: https://github.com/NetSPI/PowerUpSQL
  desc: Toolkit PowerShell per discovery e abuso di SQL Server.
  desc_long: Discovery massivo di istanze, audit di configurazioni deboli e azioni post-exploitation (esecuzione OS, escalation tramite link server/impersonation).
  best_in: [ ]
  best_in_paths: [ ]
  category_path: [ "00_Common", "Tools_Windows" ]
  notes:

- id: powerview-ps1
  name: PowerView.ps1
  version:
  kind: windows
  phases: [ "00_Common" ]
  caps: [ "ad-enum", "acl-abuse", "situational-awareness" ]
  repo: https://github.com/PowerShellMafia/PowerSploit
  desc: Enumerazione AD e analisi ACL in PowerShell.
  desc_long: Set di funzioni per mappare oggetti/relazioni AD, individuare deleghe/ACL sfruttabili (Path d’Attacco) e preparare l’ingest in BloodHound.
  best_in: [ ]
  best_in_paths: [ ]
  category_path: [ "00_Common", "Tools_Windows" ]
  notes:

- id: responder-windows
  name: Responder-Windows
  version:
  kind: windows
  phases: [ "00_Common" ]
  caps: [ "llmnr-nbns-mdns-poisoning", "hash-capture", "relay" ]
  repo: https://github.com/lgandx/Responder-Windows
  desc: Port Windows di Responder per avvelenamento LLMNR/NBNS/mDNS.
  desc_long: Intercetta risoluzioni nomi in rete locale per ottenere hash NTLM (per relay o cracking). Variante pratica quando Python non è disponibile.
  best_in: [ ]
  best_in_paths: [ ]
  category_path: [ "00_Common", "Tools_Windows" ]
  notes:

- id: rpcdump-windows
  name: rpcdump_windows.exe
  version:
  kind: windows
  phases: [ "00_Common" ]
  caps: [ "rpc-enum", "endpoint-mapper" ]
  repo: https://github.com/csandker/RPCDump
  desc: Dump degli endpoint RPC (EPM) locali/remoti per ricognizione.
  desc_long: Interroga l’Endpoint Mapper e lista interfacce/UUID/endpoint RPC esposti; utile per individuare superfici d’attacco non documentate.
  best_in: [ ]
  best_in_paths: [ ]
  category_path: [ "00_Common", "Tools_Windows" ]
  notes:

- id: rubeus
  name: Rubeus.exe
  version:
  kind: windows
  phases: [ "00_Common" ]
  caps: [ "kerberos-abuse", "asreproast", "kerberoast", "ptt", "ticket-management" ]
  repo: https://github.com/GhostPack/Rubeus
  desc: Toolkit Kerberos per offensive ops (roasting, ticketing).
  desc_long: Consente AS-REP/Kerberoasting, dump/forge/overpass/Pass-the-Ticket e gestione TGT/TGS per escalation e persistenza.
  best_in: [ ]
  best_in_paths: [ ]
  category_path: [ "00_Common", "Tools_Windows" ]
  notes:

- id: securityassessment-ps1
  name: SecurityAssessment.ps1
  version:
  kind: windows
  phases: [ "00_Common" ]
  caps: [ "host-baseline", "policy-audit", "inventory" ]
  repo:
  desc: Script di assessment per raccogliere baseline di sicurezza del sistema.
  desc_long: Colleziona policy/ruoli/servizi/log chiave e produce un pacchetto di evidenze utile per hardening e verifica post-remediation.
  best_in: [ ]
  best_in_paths: [ ]
  category_path: [ "00_Common", "Tools_Windows" ]
  notes:

- id: sharphound
  name: SharpHound.exe
  version:
  kind: windows
  phases: [ "00_Common" ]
  caps: [ "ad-graph-collection", "bloodhound-ingest" ]
  repo: https://github.com/SpecterOps/SharpHound
  desc: Collettore dati per BloodHound (ingest AD/ACL relazionali).
  desc_long: Raccoglie relazioni AD (ACL, sessioni, gruppi, SPN, deleghe) generando ZIP ingestibili in BloodHound per tracciare percorsi di escalation.
  best_in: [ ]
  best_in_paths: [ ]
  category_path: [ "00_Common", "Tools_Windows"]
  notes:

- id: sharpmapexec
  name: SharpMapExec.exe
  version:
  kind: windows
  phases: [ "00_Common" ]
  caps: [ "lateral-movement", "spray", "remote-exec" ]
  repo: https://github.com/cube0x0/SharpMapExec
  desc: Port C# “sharpen” di CME per operare da host Windows.
  desc_long: Esecuzione comandi e operazioni di movimento laterale direttamente da ambiente Windows, utile in scenari di insider simulation.
  best_in: [  ]
  best_in_paths: [ ]
  category_path: [ "00_Common", "Tools_Windows" ]
  notes:

- id: sharpview
  name: SharpView.exe
  version:
  kind: windows
  phases: [ "00_Common" ]
  caps: [ "ad-enum", "acl-enum", "situational-awareness" ]
  repo: https://github.com/tevora-threat/SharpView
  desc: Port C# di PowerView per enum AD e analisi ACL.
  desc_long: Fornisce molte funzioni PowerView in version .NET, utile quando PowerShell è monitorato/restrittivo; spesso usato per pre-ingest in BloodHound.
  best_in: [ ]
  best_in_paths: [ ]
  category_path: [ "00_Common", "Tools_Windows" ]
  notes:

- id: snaffler
  name: Snaffler.exe
  version:
  kind: windows
  phases: [ "00_Common" ]
  caps: [ "fileshare-hunting", "secret-discovery", "regex-content" ]
  repo: https://github.com/SnaffCon/Snaffler
  desc: Hunting di credenziali e dati sensibili su file share AD.
  desc_long: Scansiona condivisioni per pattern interessanti (estensioni, nomi, contenuti via regex), priorizzando “needle in haystack” su grandi domini.
  best_in: [ ]
  best_in_paths: [ ]
  category_path: [ "00_Common", "Tools_Windows" ]
  notes:

- id: sysinternals-suite
  name: SysinternalsSuite
  version:
  kind: windows
  phases: [ "00_Common" ]
  caps: [ "proc-monitoring", "forensics", "troubleshooting" ]
  repo: https://learn.microsoft.com/en-us/sysinternals/downloads/sysinternals-suite
  desc: Raccolta ufficiale di utility Microsoft per analisi e DFIR.
  desc_long: Include Autoruns/ProcMon/Sysmon/PS tools e molte altre utilità per analizzare processi, servizi, registry e rete durante engagement e triage.
  best_in: [ ]
  best_in_paths: [ ]
  category_path: [ "00_Common", "Tools_Windows" ]
  notes:

- id: wordlist-paroleitaliane
  name: Parole Italiane
  version:
  kind: wordlist
  phases: [ "00_Common" ]
  caps: [ "italian-words", "mutation-base" ]
  repo: https://github.com/napolux/paroleitaliane
  desc: Liste di parole italiane (nomi, cognomi, bad words, ecc.).
  desc_long: Set di dizionari in italiano utili per spraying/bruteforce contestuale (app locali, policy linguistiche) e per generare wordlist mutate.
  best_in: [ ]
  best_in_paths: [ ]
  category_path: [ "00_Common", "Wordlists"]
  notes:

- id: wordlist-payloadsallthethings-4-2
  name: PayloadsAllTheThings
  version: 4.2
  kind: wordlist
  phases: [ "00_Common" ]
  caps: [ "payloads", "fuzzing", "bypass-techniques" ]
  repo: https://github.com/swisskyrepo/PayloadsAllTheThings
  desc: Raccolta curata di payload e bypass per molte classi di vulnerabilità.
  desc_long: Include cheat-sheet e liste per injection, traversal, XXE, XSS, deserializzazione, ecc.; utile per fuzzing mirato e verifica remediation.
  best_in: [ ]
  best_in_paths:
    - [ "00_Common", "Wordlists" ]
  category_path: [ "00_Common", "Wordlists" ]
  notes:

- id: wordlist-portswigger
  name: PortSwigger
  version:
  kind: wordlist
  phases: [ "00_Common" ]
  caps: [ "burp-integration", "content-discovery", "intruder" ]
  repo: https://github.com/PortSwigger/wordlist-extractor
  desc: Wordlist e strumenti collegati all’ecosistema Burp (estrazione/import).
  desc_long: Utility per generare/importare wordlist direttamente da Burp e payload utili ai test web; comodo per integrare dizionari derivati dall’app target.
  best_in: [ ]
  best_in_paths: [ ]
  category_path: [ "00_Common", "Wordlists" ]
  notes:

- id: wordlist-seclists-2025-2
  name: SecLists
  version: "2025.2"
  kind: wordlist
  phases: [ "00_Common" ]
  caps: [ "user-passlists", "content-discovery", "fuzzing", "payloads" ]
  repo: https://github.com/danielmiessler/SecLists
  desc: Collezione OWASP di liste per pentest (user/pass, dir/file, fuzz).
  desc_long: Dizionari consolidati per discovery, brute force e fuzzing (inclusi nomi parametri, pattern sensibili, web-shell). Version di riferimento 2025.2.
  best_in: [ ]
  best_in_paths:
    - [ "00_Common", "Wordlists" ]
  category_path: [ "00_Common", "Wordlists" ]
  notes:


# ========= 01_Information_Gathering ========= #
- id: subbrute-77
  name: subbrute-77
  version:
  kind: tool
  phases: [ "01_Information_Gathering" ]
  caps: [ "dns-bruteforce", "subdomain-enum", "resolver-rotation", "wildcard-detection" ]
  repo: https://github.com/TheRook/subbrute
  desc: Brute force di sottodomini via DNS usando una rete di open resolvers per aggirare rate-limit e ridurre l’esposizione verso i NS del target.
  desc_long: SubBrute effettua query DNS distribuite attraverso open resolvers (funzione di proxy), mitigando throttling e blacklisting. Supporta wordlist personalizzate, verifica wildcard, gestione recursion e caching dei risultati. È utile per arricchire rapidamente la superficie di attacco prima di step più lenti (cert transparency, scraping).
  best_in: [ "01_Information_Gathering" ]
  best_in_paths:
    - [ "01_Information_Gathering", "01_Recon", "Infrastructure", "DNS_Subdomains" ]
  category_path: [ "01_Information_Gathering", "01_Recon", "Infrastructure", "DNS_Subdomains" ]
  notes: |
    >[!Nota] Nota: progetto non più aggiornato, ma ancora efficace in attività di ricognizione mirata.

- id: dirsearch
  name: dirsearch
  version: "0.4.3"
  kind: tool
  phases: [ "01_Information_Gathering" ]
  caps: [ "content-discovery", "bruteforce-dirs", "wordlists", "extensions", "resume", "proxy" ]
  repo: https://github.com/maurosoria/dirsearch
  desc: Scanner per brute force di directory e file su webserver con wordlist, estensioni e filtri avanzati.
  desc_long: Esegue scoperta di contenuti nascosti ottimizzando richieste (threading, timeout, rate control) e riducendo i falsi positivi tramite filtri per status code, lunghezza e regex. Gestisce estensioni multiple, autenticazione, proxy e resume delle sessioni per attività di enumerazione robuste e ripetibili su grandi spazi di URL.
  best_in: [ "01_Information_Gathering" ]
  best_in_paths:
    - [ "01_Information_Gathering", "01_Recon", "Web", "Content_Discovery" ]
  category_path: [ "01_Information_Gathering", "01_Recon", "Web", "Content_Discovery" ]
  notes:

- id: aquatone-linux-amd64
  name: aquatone_linux_amd64
  version: "1.7.0"
  kind: tool
  phases: [ "01_Information_Gathering" ]
  caps: [ "visual-recon", "screenshotting", "html-report", "host-triage" ]
  repo: https://github.com/michenriksen/aquatone
  desc: "Visual reconnaissance: screenshot dei servizi web e report HTML per prioritizzare gli host interessanti."
  desc_long: Prende in input liste di host/URL, effettua screenshot headless (consigliato Chromium), genera un report navigabile con gruppi per host/porta e consente triage visivo rapido di pannelli admin, errori e app non mappate. Utile dopo la fase di discovery per selezionare target ad alto valore.
  best_in: [ "01_Information_Gathering" ]
  best_in_paths:
    - [ "01_Information_Gathering", "01_Recon", "Web", "Fingerprinting", "Visual_Recon" ]
  category_path: [ "01_Information_Gathering", "01_Recon", "Web", "Fingerprinting", "Visual_Recon" ]
  notes:

- id: whatwaf-1-9
  name: WhatWaf
  version: "1.9"
  kind: tool
  phases: [ "01_Information_Gathering" ]
  caps: [ "waf-detection", "waf-fingerprint", "bypass-tips" ]
  repo: https://github.com/Ekultek/WhatWaf
  desc: Rileva e fingerprinta Web Application Firewall e suggerisce possibili vettori di bypass.
  desc_long: Analizza risposte HTTP/redirect/header/pagine di blocco per individuare il WAF in uso e fornisce indicazioni per eluderne le regole (payload tuning, header e metodi). Utile per adattare fuzzing/exploitation quando la superficie è protetta da WAF/IPS.
  best_in: [ "01_Information_Gathering" ]
  best_in_paths:
    - [ "01_Information_Gathering", "01_Recon", "Web", "Fingerprinting", "WAF" ]
  category_path: [ "01_Information_Gathering", "01_Recon", "Web", "Fingerprinting", "WAF"]
  notes:

- id: paramspider
  name: Paramspider
  version: "1.0.1"
  kind: tool
  phases: [ "01_Information_Gathering" ]
  caps: [ "params-discovery", "wayback-mining", "scope-filtering", "ext-exclusion" ]
  repo: https://github.com/devanshbatham/ParamSpider
  desc: Estrae URL e parametri da archivi web (Wayback e simili) per alimentare fuzzing e test su input reflection, SSRF, injection.
  desc_long: Indicizzato agli archivi, recupera endpoint e parametri senza toccare l’host target, filtra “rumore” per estensioni/regex e permette esclusioni su domini/subdomini. Ottimo per generare rapidamente liste di parametri per XSS/SQLi/SSRF mirate e per verifiche post-remediation.
  best_in: [ "01_Information_Gathering" ]
  best_in_paths:
    - [ "01_Information_Gathering", "01_Recon", "Web", "Params_Discovery" ]
  category_path: [ "01_Information_Gathering", "01_Recon", "Web", "Params_Discovery" ]
  notes:


# ========= 02_Exploitation ========= #

# ========= 03_Post_Exploitation ========= #

# ========= 04_Miscellaneous ========= #




- id: Metasploit Plugins
  name: dirsearch
  kind: web
  phases: [ "00_Common" ]
  caps: [ "content-discovery", "bruteforce-dirs", "wordlists" ]
  repo: https://github.com/maurosoria/dirsearch
  desc: Bruteforce di directory/file.
  desc_long: Scanner di directory e file nascosti (wordlist personalizzabili, estensioni, esclusioni, resume, proxy).
  best_in: [ "01_Information_Gathering" ]
  best_in_paths:
    - [ "01_Information_Gathering", "Web", "Content_Discovery" ]
  category_path: [ "01_Information_Gathering", "Web", "Content_Discovery" ]
  notes:


- id: dirsearch
  name: dirsearch
  kind: web
  phases: [ "01_Information_Gathering" ]
  caps: [ "content-discovery", "bruteforce-dirs", "wordlists" ]
  repo: https://github.com/maurosoria/dirsearch
  desc: Bruteforce di directory/file.
  desc_long: Scanner di directory e file nascosti (wordlist personalizzabili, estensioni, esclusioni, resume, proxy).
  best_in: [ "01_Information_Gathering" ]
  best_in_paths:
    - [ "01_Information_Gathering", "Web", "Content_Discovery" ]
  category_path: [ "01_Information_Gathering", "Web", "Content_Discovery" ]
  notes: |
    # ciao

- id: ffuf
  name: FFUF
  kind: web
  phases: [ "01_Information_Gathering" ]
  caps: [ "fuzzing", "content-discovery", "parameter-discovery" ]
  repo: https://github.com/ffuf/ffuf
  desc: Fuzzer veloce per HTTP.
  desc_long: Fuzzing di path/param/header; recursion; match su code/size/words/regex. Perfetto per enum web rapida.
  best_in: [ "01_Information_Gathering" ]
  best_in_paths:
    - [ "01_Information_Gathering", "Web", "Fuzzing" ]
  category_path: [ "01_Information_Gathering", "Web", "Fuzzing", "ffuf" ]

- id: nuclei
  name: Nuclei
  kind: web
  phases: [ "01_Information_Gathering" ]
  caps: [ "cve-scan", "misconfig-scan", "templating" ]
  repo: https://github.com/projectdiscovery/nuclei
  desc: Scanner template-driven.
  desc_long: Template YAML per CVE/misconfig/creds di default; veloce e molto estensibile.
  best_in: []
  best_in_paths:
    - [ "01_Information_Gathering", "Web", "Vulnerability_Scanning" ]
  category_path: [ "01_Information_Gathering", "Web", "Vulnerability_Scanning", "nuclei" ]

- id: sqlmap
  name: sqlmap
  kind: web
  phases: [ "02_Exploitation" ]
  caps: [ "sqli", "db-dump", "os-shell" ]
  repo: https://github.com/sqlmapproject/sqlmap
  desc: Exploitation SQLi automatizzato.
  desc_long: Rileva/abusa SQLi; esfiltra DB; file read/write; OS shell a seconda del DBMS.
  best_in: [ "02_Exploitation" ]
  best_in_paths:
    - [ "02_Exploitation", "Web", "SQLi" ]
  category_path: [ "02_Exploitation", "Web", "SQLi", "sqlmap" ]

- id: dalfox
  name: Dalfox
  kind: web
  phases: [ "02_Exploitation" ]
  caps: [ "xss", "reflection-tracing", "param-mining" ]
  repo: https://github.com/hahwul/dalfox
  desc: Strumento XSS avanzato.
  desc_long: Ricerca XSS con param mining, dedup, tracing di riflessioni e payload context-aware.
  best_in: [ "02_Exploitation" ]
  best_in_paths:
    - [ "02_Exploitation", "Web", "XSS" ]
  category_path: [ "02_Exploitation", "Web", "XSS", "dalfox" ]

- id: xsstrike
  name: XSStrike
  kind: web
  phases: [ "02_Exploitation" ]
  caps: [ "xss", "fuzzing", "payload-gen" ]
  repo: https://github.com/s0md3v/XSStrike
  desc: Rileva e sfrutta XSS.
  desc_long: Fuzzer/detector XSS con generazione payload e tentativi di bypass WAF.
  best_in: []
  best_in_paths:
    - [ "02_Exploitation", "Web", "XSS" ]
  category_path: [ "02_Exploitation", "Web", "XSS", "xsstrike" ]

- id: amass
  name: Amass
  kind: web
  phases: [ "01_Information_Gathering" ]
  caps: [ "subdomain-enum", "dns", "graph" ]
  repo: https://github.com/owasp-amass/amass
  desc: Subdomain enumeration.
  desc_long: Attivo/passivo con molte fonti; correlazione e grafi; asset mapping su ampi domini.
  best_in: [ "01_Information_Gathering" ]
  best_in_paths:
    - [ "01_Information_Gathering", "Web", "Subdomain_Enumeration" ]
  category_path: [ "01_Information_Gathering", "Web", "Subdomain_Enumeration", "amass" ]

- id: subfinder
  name: Subfinder
  kind: web
  phases: [ "01_Information_Gathering" ]
  caps: [ "subdomain-enum", "passive" ]
  repo: https://github.com/projectdiscovery/subfinder
  desc: Subdomain passivo veloce.
  desc_long: Enum passivo basato su molte fonti; ottimo in chain con httpx/dnsx/nuclei.
  best_in: []
  best_in_paths:
    - [ "01_Information_Gathering", "Web", "Subdomain_Enumeration" ]
  category_path: [ "01_Information_Gathering", "Web", "Subdomain_Enumeration", "subfinder" ]

- id: subbrute
  name: SubBrute
  kind: web
  phases: [ "01_Information_Gathering" ]
  caps: [ "subdomain-bruteforce", "dns" ]
  repo: https://github.com/TheRook/subbrute
  desc: Bruteforce subdomain.
  desc_long: Generazione e risoluzione DNS con wordlist per scoprire sottodomini non presenti nelle fonti passive.
  best_in: []
  best_in_paths:
    - [ "01_Information_Gathering", "Web", "Subdomain_Enumeration" ]
  category_path: [ "01_Information_Gathering", "Web", "Subdomain_Enumeration", "subbrute" ]

- id: dnsx
  name: dnsx
  kind: web
  phases: [ "01_Information_Gathering" ]
  caps: [ "dns-resolver", "filter" ]
  repo: https://github.com/projectdiscovery/dnsx
  desc: Risoluzione DNS in massa.
  desc_long: Valida record (A/AAAA/CNAME/MX/…) e filtra risposte; ottimo step post-subdomain.
  best_in: []
  best_in_paths:
    - [ "01_Information_Gathering", "Web", "DNS" ]
  category_path: [ "01_Information_Gathering", "Web", "DNS", "dnsx" ]

- id: httpx
  name: httpx
  kind: web
  phases: [ "01_Information_Gathering" ]
  caps: [ "http-probing", "tech-detect", "web-screenshot" ]
  repo: https://github.com/projectdiscovery/httpx
  desc: Probe HTTP massivo.
  desc_long: Identifica tecnologie, status, title, TLS; screenshot opzionali; ottimo dopo subdomain enum.
  best_in: []
  best_in_paths:
    - [ "01_Information_Gathering", "Web", "HTTP_Probing" ]
  category_path: [ "01_Information_Gathering", "Web", "HTTP_Probing", "httpx" ]

- id: gobuster
  name: gobuster
  kind: web
  phases: [ "01_Information_Gathering" ]
  caps: [ "content-discovery", "vhost-enum" ]
  repo: https://github.com/OJ/gobuster
  desc: Content discovery e vhost.
  desc_long: Bruteforce directory/file, virtual host e DNS; veloce in Go.
  best_in: []
  best_in_paths:
    - [ "01_Information_Gathering", "Web", "Content_Discovery" ]
  category_path: [ "01_Information_Gathering", "Web", "Content_Discovery", "gobuster" ]

- id: nmap
  name: Nmap
  kind: both
  phases: [ "01_Information_Gathering" ]
  caps: [ "port-scan", "service-detect", "nse" ]
  repo: https://github.com/nmap/nmap
  desc: Network mapper.
  desc_long: Scansione porte/servizi, fingerprinting; NSE per vuln/misconfig. Cardine della recon.
  best_in: [ "01_Information_Gathering" ]
  best_in_paths:
    - [ "01_Information_Gathering", "Infrastructure", "Port_Scanning" ]
  category_path: [ "01_Information_Gathering", "Infrastructure", "Port_Scanning", "nmap" ]

- id: masscan
  name: Masscan
  kind: infrastructure
  phases: [ "01_Information_Gathering" ]
  caps: [ "port-scan", "internet-scale" ]
  repo: https://github.com/robertdavidgraham/masscan
  desc: Port scanner ad altissima velocità.
  desc_long: Scansioni massive ad alto throughput; ottimo per mappature grandi spazi IP.
  best_in: []
  best_in_paths:
    - [ "01_Information_Gathering", "Infrastructure", "Port_Scanning" ]
  category_path: [ "01_Information_Gathering", "Infrastructure", "Port_Scanning", "masscan" ]

- id: naabu
  name: naabu
  kind: infrastructure
  phases: [ "01_Information_Gathering" ]
  caps: [ "port-scan", "tcp-scan" ]
  repo: https://github.com/projectdiscovery/naabu
  desc: TCP port scanner veloce.
  desc_long: Scanner minimal TCP con integrazione PD (httpx/nuclei).
  best_in: []
  best_in_paths:
    - [ "01_Information_Gathering", "Infrastructure", "Port_Scanning" ]
  category_path: [ "01_Information_Gathering", "Infrastructure", "Port_Scanning", "naabu" ]

- id: rustscan
  name: RustScan
  kind: infrastructure
  phases: [ "01_Information_Gathering" ]
  caps: [ "port-scan", "banner-grab" ]
  repo: https://github.com/RustScan/RustScan
  desc: Wrapper veloce per Nmap.
  desc_long: Scopre porte velocemente (Rust) e delega a Nmap per service/OS detect e script NSE.
  best_in: []
  best_in_paths:
    - [ "01_Information_Gathering", "Infrastructure", "Port_Scanning" ]
  category_path: [ "01_Information_Gathering", "Infrastructure", "Port_Scanning", "rustscan" ]

- id: ldapdomaindump
  name: ldapdomaindump
  kind: infrastructure
  phases: [ "01_Information_Gathering" ]
  caps: [ "ad", "ldap-enum" ]
  repo: https://github.com/dirkjanm/ldapdomaindump
  desc: Dump LDAP in AD.
  desc_long: Query LDAP e report HTML/JSON/CSV; base per analisi strutturata dei domini AD.
  best_in: []
  best_in_paths:
    - [ "01_Information_Gathering", "AD", "LDAP" ]
  category_path: [ "01_Information_Gathering", "AD", "LDAP", "ldapdomaindump" ]

- id: adidnsdump
  name: adidnsdump
  kind: infrastructure
  phases: [ "01_Information_Gathering" ]
  caps: [ "ad", "dns-enum" ]
  repo: https://github.com/dirkjanm/adidnsdump
  desc: AD-Integrated DNS dump.
  desc_long: Enum DNS integrato in AD (record/zone) via LDAP/Kerberos; utile per mappare servizi interni.
  best_in: []
  best_in_paths:
    - [ "01_Information_Gathering", "AD", "DNS" ]
  category_path: [ "01_Information_Gathering", "AD", "DNS", "adidnsdump" ]

- id: nbtscan
  name: nbtscan
  kind: infrastructure
  phases: [ "01_Information_Gathering" ]
  caps: [ "netbios", "broadcast" ]
  repo: https://github.com/resurrecting-open-source-projects/nbtscan
  desc: Enumerazione NetBIOS.
  desc_long: Scansione NetBIOS su reti locali per scoprire host e nomi macchina.
  best_in: []
  best_in_paths:
    - [ "01_Information_Gathering", "AD", "Legacy" ]
  category_path: [ "01_Information_Gathering", "AD", "Legacy", "nbtscan" ]

- id: kerbrute
  name: Kerbrute
  kind: infrastructure
  phases: [ "01_Information_Gathering", "03_Post_Exploitation" ]
  caps: [ "ad", "kerberos", "user-enum" ]
  repo: https://github.com/ropnop/kerbrute
  desc: Enumerazione utenti/realm Kerberos.
  desc_long: Username enumeration e password spraying su Kerberos; utile in fasi iniziali e di health-check AD.
  best_in: []
  best_in_paths:
    - [ "01_Information_Gathering", "AD", "Kerberos" ]
    - [ "03_Post_Exploitation", "AD_Windows" ]
  category_path: [ "01_Information_Gathering", "AD", "Kerberos", "kerbrute" ]

- id: feroxbuster
  name: feroxbuster
  kind: web
  phases: [ "01_Information_Gathering" ]
  caps: [ "content-discovery", "recursion" ]
  repo: https://github.com/epi052/feroxbuster
  desc: Scanner content discovery in Rust.
  desc_long: Molto veloce per enumerazione contenuti con recursion e filtri estensioni.
  best_in: []
  best_in_paths:
    - [ "01_Information_Gathering", "Web", "Content_Discovery" ]
  category_path: [ "01_Information_Gathering", "Web", "Content_Discovery", "feroxbuster" ]

- id: hydra
  name: Hydra
  kind: both
  phases: [ "02_Exploitation" ]
  caps: [ "password-spraying", "bruteforce" ]
  repo: https://github.com/vanhauser-thc/thc-hydra
  desc: Brute-force multi-protocollo.
  desc_long: Supporta molti protocolli (SSH/FTP/HTTP/RDP/SMTP/DB…); ottimo per spraying con regole.
  best_in: []
  best_in_paths:
    - [ "02_Exploitation", "Infrastructure", "Password_Attacks" ]
  category_path: [ "02_Exploitation", "Infrastructure", "Password_Attacks", "Hydra" ]

- id: medusa
  name: Medusa
  kind: infrastructure
  phases: [ "02_Exploitation" ]
  caps: [ "password-spraying", "bruteforce" ]
  repo: https://github.com/jmk-foofus/medusa
  desc: Brute-force parallelo.
  desc_long: Alternativa a Hydra con approccio modulare e parallelismo elevato.
  best_in: []
  best_in_paths:
    - [ "02_Exploitation", "Infrastructure", "Password_Attacks" ]
  category_path: [ "02_Exploitation", "Infrastructure", "Password_Attacks", "Medusa" ]

- id: metasploit
  name: Metasploit Framework
  kind: both
  phases: [ "02_Exploitation", "03_Post_Exploitation" ]
  caps: [ "exploit", "payload", "post" ]
  repo: https://github.com/rapid7/metasploit-framework
  desc: Framework exploitation/post.
  desc_long: Ampia libreria di exploit/payload/post; orchestrazione di sessioni e sviluppo custom.
  best_in: [ "02_Exploitation" ]
  best_in_paths:
    - [ "02_Exploitation", "Infrastructure", "Exploitation_Framework" ]
  category_path: [ "02_Exploitation", "Infrastructure", "Exploitation_Framework", "Metasploit" ]

- id: smbmap
  name: smbmap
  kind: infrastructure
  phases: [ "01_Information_Gathering" ]
  caps: [ "smb-enum", "shares" ]
  repo: https://github.com/ShawnDEvans/smbmap
  desc: Enum share SMB e permessi.
  desc_long: Lista condivisioni, permessi e accessi; utile per percorsi scrivibili e potenziali movimenti.
  best_in: []
  category_path: [ "01_Information_Gathering", "Infrastructure", "SMB", "smbmap" ]

- id: smbclient
  name: smbclient
  kind: infrastructure
  phases: [ "01_Information_Gathering" ]
  caps: [ "smb", "shares" ]
  repo: https://www.samba.org/samba/docs/current/man-html/smbclient.1.html
  desc: Client SMB (Samba).
  desc_long: Client interattivo per share SMB; testing accessi, upload/download, browsing.
  best_in: []
  category_path: [ "01_Information_Gathering", "Infrastructure", "SMB", "smbclient" ]

- id: responder
  name: Responder
  kind: infrastructure
  phases: [ "03_Post_Exploitation" ]
  caps: [ "ad", "ntlm", "mitm" ]
  repo: https://github.com/lgandx/Responder
  desc: LLMNR/NBT-NS/mDNS poisoner.
  desc_long: Cattura hash NTLM e MITM in ambienti Windows non hardenizzati.
  best_in: [ "03_Post_Exploitation" ]
  best_in_paths:
    - [ "03_Post_Exploitation", "AD_Windows" ]
  category_path: [ "03_Post_Exploitation", "AD_Windows", "Responder" ]

- id: bloodhound
  name: BloodHound
  kind: infrastructure
  phases: [ "03_Post_Exploitation" ]
  caps: [ "ad-graph", "path-to-da" ]
  repo: https://github.com/BloodHoundAD/BloodHound
  desc: Analisi grafi AD per path-to-DA.
  desc_long: Collezione dati (SharpHound), grafo relazioni AD, individuazione percorsi privilegiati.
  best_in: []
  best_in_paths:
    - [ "03_Post_Exploitation", "AD_Windows" ]
  category_path: [ "03_Post_Exploitation", "AD_Windows", "BloodHound" ]

- id: cme
  name: CrackMapExec
  kind: infrastructure
  phases: [ "03_Post_Exploitation" ]
  caps: [ "ad", "smb", "winrm" ]
  repo: https://github.com/Porchetta-Industries/CrackMapExec
  desc: Swiss-knife Active Directory.
  desc_long: Enum e post-exploitation AD (SMB/WINRM/MSSQL/LDAP), spraying, esecuzione comandi, plugin.
  best_in: [ "03_Post_Exploitation" ]
  best_in_paths:
    - [ "03_Post_Exploitation", "AD_Windows" ]
  category_path: [ "03_Post_Exploitation", "AD_Windows", "CrackMapExec" ]

- id: impacket
  name: Impacket
  kind: infrastructure
  phases: [ "03_Post_Exploitation" ]
  caps: [ "ad", "smb", "mssql", "kerberos" ]
  repo: https://github.com/fortra/impacket
  desc: Toolkit protocolli MS.
  desc_long: psexec/wmiexec/secretsdump/ticketer/etc.; essenziale per AD e lateral movement.
  best_in: [ "03_Post_Exploitation" ]
  best_in_paths:
    - [ "03_Post_Exploitation", "AD_Windows" ]
  category_path: [ "03_Post_Exploitation", "AD_Windows", "Impacket" ]

- id: rubeus
  name: Rubeus
  kind: infrastructure
  phases: [ "03_Post_Exploitation" ]
  caps: [ "kerberos", "ticket" ]
  repo: https://github.com/GhostPack/Rubeus
  desc: Toolkit Kerberos per Windows.
  desc_long: Funzioni askTGT/askTGS/renew/PTT/kerberoast per operazioni post-exploitation su AD.
  best_in: []
  best_in_paths:
    - [ "03_Post_Exploitation", "AD_Windows" ]
  category_path: [ "03_Post_Exploitation", "AD_Windows", "Rubeus" ]

- id: peass-ng
  name: PEASS-ng
  kind: both
  phases: [ "03_Post_Exploitation" ]
  caps: [ "privesc" ]
  repo: https://github.com/carlospolop/PEASS-ng
  desc: Privilege escalation suite.
  desc_long: linPEAS/winPEAS raccolgono indicatori di escalation su Linux/Windows; output colorato e parse-friendly.
  best_in: [ "03_Post_Exploitation" ]
  best_in_paths:
    - [ "03_Post_Exploitation", "Privilege_Escalation" ]
  category_path: [ "03_Post_Exploitation", "Privilege_Escalation", "PEASS-ng" ]

- id: ligolo
  name: Ligolo-NG
  kind: infrastructure
  phases: [ "03_Post_Exploitation" ]
  caps: [ "tunneling", "socks", "pivoting" ]
  repo: https://github.com/nicocha30/ligolo-ng
  desc: Tunneling user-space e pivot.
  desc_long: Agent + relay per pivoting senza modificare il routing di sistema; ottimo per reti segmentate.
  best_in: []
  best_in_paths:
    - [ "03_Post_Exploitation", "Pivoting" ]
  category_path: [ "03_Post_Exploitation", "Pivoting", "Ligolo-ng" ]

- id: lazagne
  name: LaZagne
  kind: both
  phases: [ "03_Post_Exploitation" ]
  caps: [ "credentials-dump" ]
  repo: https://github.com/AlessandroZ/LaZagne
  desc: Estrazione credenziali locali.
  desc_long: Dump da app comuni (browser, mail, wifi, git…); comodo per rapid collection post-exploitation.
  best_in: []
  best_in_paths:
    - [ "03_Post_Exploitation", "Credentials" ]
  category_path: [ "03_Post_Exploitation", "Credentials", "LaZagne" ]

- id: john
  name: JohnTheRipper
  kind: both
  phases: [ "03_Post_Exploitation" ]
  caps: [ "hash-cracking", "wordlists" ]
  repo: https://github.com/openwall/john
  desc: Cracking hash.
  desc_long: Supporto esteso (LM/NT/NTLM, ZIP, PDF, Kerberos…); rule-based mangling; GPU via Jumbo.
  best_in: []
  best_in_paths:
    - [ "03_Post_Exploitation", "Credentials" ]
  category_path: [ "03_Post_Exploitation", "Credentials", "JohnTheRipper" ]

- id: hashcat
  name: hashcat
  kind: both
  phases: [ "03_Post_Exploitation" ]
  caps: [ "hash-cracking", "gpu" ]
  repo: https://github.com/hashcat/hashcat
  desc: Cracking GPU-accelerato.
  desc_long: Alte prestazioni su GPU; mask/combination/rule engine; moltissimi formati.
  best_in: []
  best_in_paths:
    - [ "03_Post_Exploitation", "Credentials" ]
  category_path: [ "03_Post_Exploitation", "Credentials", "hashcat" ]

- id: mimikatz
  name: Mimikatz
  kind: infrastructure
  phases: [ "03_Post_Exploitation" ]
  caps: [ "credentials-dump", "sekurlsa" ]
  repo: https://github.com/gentilkiwi/mimikatz
  desc: Credenziali su Windows.
  desc_long: Dump credenziali/NTLM, pass-the-hash/ticket, manomissione LSASS.
  best_in: []
  best_in_paths:
    - [ "03_Post_Exploitation", "Credentials" ]
  category_path: [ "03_Post_Exploitation", "Credentials", "Mimikatz" ]

- id: ghidra
  name: Ghidra
  kind: both
  phases: [ "04_Forensics" ]
  caps: [ "reverse", "decompiler", "static-analysis" ]
  repo: https://github.com/NationalSecurityAgency/ghidra
  desc: Suite RE open source.
  desc_long: Decompiler multi-arch, analisi statica, scripting Java/Python; perfetto per analisi binari e plugin.
  best_in: [ "04_Forensics" ]
  best_in_paths:
    - [ "04_Forensics", "Reverse_Engineering" ]
  category_path: [ "04_Forensics", "Reverse_Engineering", "Ghidra" ]

- id: pwntools
  name: pwntools
  kind: both
  phases: [ "05_Misc" ]
  caps: [ "exploit-dev", "scripting" ]
  repo: https://github.com/Gallopsled/pwntools
  desc: Libreria Python per exploit dev.
  desc_long: ROP, shellcode, helpers per ELF/protocol; molto usata in CTF/ricerca.
  best_in: []
  best_in_paths:
    - [ "05_Misc", "Research" ]
  category_path: [ "05_Misc", "Research", "pwntools" ]
